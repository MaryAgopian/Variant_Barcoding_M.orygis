#Using FASTP software

#FASTP was chosen because it is able to integrate quality control and preprocessing steps of the sample data that FASTQC cannot by itself. This is because FASTQC is exclusively a quality checking software, while FASTP integrates the function of various other pipeline softwares. 
##It incorporates: FASTQC-like function for quality checking, Cutadapt-like function for removing adapter sequences, Trimmomatic-like function for trimming low-quality bases, Sliding window cutting which goes through the entire sequence and removes any severely low quality reads.

#Installation and general code template
conda install -c bioconda fastp
fastp -i in.R1.fq.gz -I in.R2.fq.gz -o out.R1.fq.gz -O out.R2.fq.gz


#Used code incorporating this template for first 8 Samples

#Sample 1:
fastp -i ERR015582_1.fastq.gz -I ERR015582_2.fastq.gz -o ERR015582_out.R1.fastq.gz -O ERR015582_out.R2.fastq.gz

#Sample 2:
fastp -i ERR017782_1.fastq.gz -I ERR017782_2.fastq.gz -o ERR017782_out.R1.fastq.gz -O ERR017782_out.R2.fastq.gz

#Sample 3:
fastp -i ERR234675_1.fastq.gz -I ERR234675_2.fastq.gz -o ERR234675_out.R1.fastq.gz -O ERR234675_out.R2.fastq.gz

#Sample 4:
fastp -i ERR234676_1.fastq.gz -I ERR234676_2.fastq.gz -o ERR234676_out.R1.fastq.gz -O ERR234676_out.R2.fastq.gz

#Sample 5:
fastp -i ERR234682_1.fastq.gz -I ERR234682_2.fastq.gz -o ERR234682_out.R1.fastq.gz -O ERR234682_out.R2.fastq.gz

#Sample 6:
fastp -i ERR2199741_1.fastq.gz -I ERR2199741_2.fastq.gz -o ERR2199741_out.R1.fastq.gz -O ERR2199741_out.R2.fastq.gz

#Sample 7:
fastp -i ERR2199829_1.fastq.gz -I ERR2199829_2.fastq.gz -o ERR2199829_out.R1.fastq.gz -O ERR2199829_out.R2.fastq.gz

#Sample 8:
fastp -i ERR2512389_1.fastq.gz -I ERR2512389_2.fastq.gz -o ERR2512389_out.R1.fastq.gz -O ERR2512389_out.R2.fastq.gz

#Remember to rename each fastp.html and fastp.json file that is generated from each line of code. 
#The default name is always the same and requires manual changing or it will be overidden with each new piece of code
